@use 'sass:map';
@use './reset/reset.scss';

// variables scss, use it always as map.get($color-options, {letter});
$color-a: #0f0f0f;
$color-b: #fefefe;
$color-c: #f7f8f4;

/* Accent Color */
$color-d: #7ce55e;
$color-e: #189b5c;
$color-f: #3d9dd8;
$color-g: #ffb41d;
$color-h: #f96e43;
$color-i: #f78bd8;

$color-options: (
  a: $color-a,
  b: $color-b,
  c: $color-c,
  d: $color-d,
  e: $color-e,
  f: $color-f,
  g: $color-g,
  h: $color-h,
  i: $color-i,
);

$colorbg-options: (
  a: $color-a,
  b: $color-b,
  c: $color-c,
  d: $color-d,
);

// Measure
$measure: 0.5rem;
/* 0.5rem = 8px */

.roboto {
  font-family: 'Roboto', sans-serif;
  font-optical-sizing: auto;
  font-weight: 300 400;
  font-style: normal;
}

.f--font-a {
  font-size: 50px;
}

.f--font-b {
  font-size: 35px;
}

.f--font-c {
  font-size: 25px;
}

/* Custom util: adds horizontal gutters for columns, not provided by DS */
.u--cols-gap-x > [class*='f--col-'] {
  padding-left: $measure * 2;
  padding-right: $measure * 2;
}

body {
  overflow: scroll !important;
  @extend .roboto;
  color: map.get($color-options, a);
  line-height: 1.4;
}

.c--preloader-a {
  background-color: map.get($color-options, b);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
}

.c--header-a {
  position: fixed;
  top: $measure * 2;
  left: 0;
  width: 100%;
  z-index: 20;

  &__wrapper {
    background-color: map.get($color-options, b);
    text-align: center;
    border-radius: 8px;
    padding: $measure * 2 $measure * 4;
  }
}

.c--page-a {
  position: relative;

  &__ft-items {
    position: relative;
    z-index: 10;
  }

  &__bg-items {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    z-index: 1;
  }
}

.c--hero-a {
  background-color: map.get($color-options, e);
  height: 60vh;
  display: flex;
  width: 100%;
  align-items: center;

  &__title {
    @extend .f--font-a;
    text-align: center;
    color: map.get($color-options, b);
  }
}

.c--accordion-a {
  &__item {
    &__hd {
      padding: $measure * 2 0;
      color: map.get($color-options, a);
      border-bottom: 1px solid #fff;
      display: block;
      width: 100%;
      text-align: left;
      position: relative;
      @extend .f--font-c;

      &__artwork {
        --translate: translateY(25px);
        --scale: scale(1.8);
        --rotate-closed: rotate(180deg);
        --rotate-open: rotate(0deg);

        position: absolute;
        right: 0;
        top: 0;
        transform: var(--translate) var(--scale) var(--rotate-closed);
        transition: transform 0.3s ease;
        pointer-events: none;
      }
    }
  }
}

.c--accordion-a__item__hd--is-active .c--accordion-a__item__hd__artwork {
  transform: var(--translate) var(--scale) var(--rotate-open);
}

.c--btn-a {
  display: inline-block;
  background-color: map.get($color-options, d);
  color: map.get($color-options, b);
  padding: $measure * 2 $measure * 4;
  border-radius: 50px;
  text-decoration: none;
  font-weight: 500;
  transition: all 0.3s ease-in-out;

  &:hover {
    border-radius: 10px;
    background-color: rgba(map.get($color-options, d), 0.8);
  }
}

.c--lottie-a {
  height: 300px;
  width: 100%;
}

// Card Components
.c--card-a {
  height: 100%;
  background-color: map.get($color-options, b);
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  transition:
    transform 0.3s ease,
    box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  &__image {
    width: 100%;
    height: 200px;
    overflow: hidden;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }
  }

  &:hover &__image img {
    transform: scale(1.05);
  }

  &__content {
    padding: $measure * 4;
  }

  &__title {
    @extend .f--font-c;
    color: map.get($color-options, a);
    margin-bottom: $measure * 2;
    font-weight: 600;
  }

  &__description {
    color: map.get($color-options, a);
    margin-bottom: $measure * 3;
    line-height: 1.6;
  }

  &__link {
    color: map.get($color-options, d);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;

    &:hover {
      color: map.get($color-options, e);
    }
  }
}

.c--card-b {
  height: 100%;
  background-color: map.get($color-options, b);
  border-radius: 12px;
  padding: $measure * 4;
  text-align: center;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  transition:
    transform 0.3s ease,
    box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  &__icon {
    margin-bottom: $measure * 3;

    &-text {
      font-size: 48px;
      display: block;
    }
  }

  &__title {
    @extend .f--font-c;
    color: map.get($color-options, a);
    margin-bottom: $measure * 2;
    font-weight: 600;
  }

  &__description {
    color: map.get($color-options, a);
    margin-bottom: $measure * 3;
    line-height: 1.6;
  }

  &__link {
    color: map.get($color-options, d);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;

    &:hover {
      color: map.get($color-options, e);
    }
  }
}

.c--card-c {
  position: relative;
  width: 584px;
  height: 311px;
  background: map.get($color-options, a);
  border-radius: 24px;
  overflow: hidden;

  &__brand {
    position: absolute;
    top: 24px;
    right: 24px;
    width: 165px;
    height: 48.18px;
  }

  &__title {
    position: absolute;
    left: 24px;
    bottom: 20px;
    margin: 0;
    font-weight: 700;
    font-size: 80px;
    line-height: 1;

    background: linear-gradient(
      to bottom,
      map.get($color-options, i) 0 60%,
      map.get($color-options, e) 60% 100%
    );
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
  }
}

.c--cards-grid {
  --gap: clamp(20px, calc(20px + (100vw - 820px) * 0.0316), 32px);
  --radius: 24px;
  display: grid;
  gap: var(--gap);
  grid-template-columns: repeat(12, minmax(0, 1fr));
  grid-template-rows: repeat(7, minmax(0, 1fr));
  width: 100%;
  max-width: 1200px;
  aspect-ratio: 1200 / 714;
  height: auto;

  &__item {
    display: flex;
    align-items: flex-end;
    border-radius: var(--radius);

    &--i1 {
      grid-column: 1 / span 3;
      grid-row: 1 / span 3;
      background: map.get($color-options, d);
    }

    &--i2 {
      grid-column: 1 / span 3;
      grid-row: 4 / span 2;
      background: map.get($color-options, f);
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
      margin-bottom: calc(-1 * var(--gap));
      position: relative;

      .blue-notch {
        position: absolute;
        bottom: 0;
        right: -24px;
        width: var(--radius);
        height: var(--radius);
        background: map.get($color-options, f);
        z-index: 1;
        overflow: hidden;

        &::after {
          content: '';
          position: absolute;
          inset: 0;
          background: map.get($color-options, b);
          border-bottom-left-radius: 100%;
        }
      }
    }

    &--i3 {
      grid-column: 1 / span 5;
      grid-row: 6 / span 3;
      background: map.get($color-options, f);
      border-top-left-radius: 0;
    }

    &--i4 {
      grid-column: 6 / span 3;
      grid-row: 6 / span 3;
      background: map.get($color-options, g);
    }

    &--i5 {
      grid-column: 9 / span 4;
      grid-row: 3 / span 6;
      background: map.get($color-options, i);
      z-index: 15;
    }

    &--i6 {
      grid-column: 4 / span 5;
      grid-row: 3 / span 3;
      background: map.get($color-options, e);
      margin-top: calc(-1 * var(--gap));
      border-top-left-radius: 0;
      border-top-right-radius: 0;
      position: relative;
      z-index: 10;

      .green-notch {
        position: absolute;
        top: 0;
        right: -24px;
        width: var(--radius);
        height: var(--radius);
        background: map.get($color-options, e);
        z-index: 1;
        overflow: hidden;

        &::after {
          content: '';
          position: absolute;
          inset: 0;
          background: map.get($color-options, b);
          border-top-left-radius: 100%;
        }
      }
    }

    &--i7 {
      grid-column: 4 / span 9;
      grid-row: 1 / span 2;
      background: map.get($color-options, e);
      border-bottom-left-radius: 0;
    }
  }

  &__text-wrapper {
    width: clamp(160px, 19vw, 229px);
    height: clamp(72px, 7.2vw, 86px);
    display: flex;
    align-items: center;
    padding-left: 1rem;
  }

  &__text {
    font:
      400 clamp(20px, 2vw, 32px) 'Roboto',
      sans-serif;
    color: map.get($color-options, a);
    width: 181px;
    height: 38px;
  }
}

// Responsive Design
@media (max-width: 1024px) {
  .f--row[data-grid='cards'] > [class*='f--col-']:last-child {
    flex: 0 0 100%;
    max-width: 100%;
  }
}

@media (max-width: 768px) {
  .f--font-a {
    font-size: 32px;
  }

  .f--font-b {
    font-size: 24px;
  }

  .f--font-c {
    font-size: 18px;
  }

  .c--hero-a {
    height: 40vh;
  }

  .c--card-c {
    width: 100%;
    aspect-ratio: 584 / 311;
    height: auto;

    &__title {
      font-size: clamp(32px, 9vw, 80px);
    }
    &__brand {
      left: auto;
      width: clamp(110px, 20vw, 165px);
      height: auto;
    }
  }

  .c--cards-grid {
    grid-template-columns: 1fr;
    grid-template-rows: auto;
    height: auto;

    &__text-wrapper {
      width: 180px;
      height: 64px;
    }
    &__text {
      font-size: 22px;
      width: auto;
      height: auto;
    }

    &__item {
      grid-column: 1 / -1;
      min-height: 200px;
      grid-row: auto;
    }

    &__item--i2 {
      display: none;
    }

    &__item--i3 {
      border-top-left-radius: var(--radius);
    }

    &__item--i6 {
      margin-top: 0;
      border-top-right-radius: var(--radius);
      border-top-left-radius: var(--radius);
    }

    &__item--i6 .green-notch {
      display: none;
    }

    &__item--i7 {
      display: none;
    }
  }
}

@media (max-width: 480px) {
  .f--font-a {
    font-size: 28px;
  }

  .f--font-b {
    font-size: 20px;
  }

  .c--hero-a {
    height: 30vh;
  }

  .c--card-a__content,
  .c--card-b {
    padding: $measure * 3;
  }
}
