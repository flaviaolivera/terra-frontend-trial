@use 'sass:map';
@use './reset/reset.scss';

// variables scss, use it always as map.get($color-options, {letter});
$color-a: #0f0f0f;
$color-b: #fefefe;
$color-c: #f7f8f4;

/* Accent Color */
$color-d: #7ce55e;
$color-e: #189b5c;
$color-f: #3d9dd8;
$color-g: #ffb41d;
$color-h: #f96e43;
$color-i: #f78bd8;

$color-options: (
  a: $color-a,
  b: $color-b,
  c: $color-c,
  d: $color-d,
  e: $color-e,
  f: $color-f,
  g: $color-g,
  h: $color-h,
  i: $color-i,
);

$colorbg-options: (
  a: $color-a,
  b: $color-b,
  c: $color-c,
  d: $color-d,
);

// Measure
$measure: 0.5rem;
/* 0.5rem = 8px */

.roboto {
  font-family: 'Roboto', sans-serif;
  font-optical-sizing: auto;
  font-weight: 300 400;
  font-style: normal;
}

.f--font-a {
  font-size: 50px;
}

.f--font-b {
  font-size: 35px;
}

.f--font-c {
  font-size: 25px;
}

body {
  overflow: scroll !important;
  @extend .roboto;
  color: map.get($color-options, a);
  line-height: 1.4;
}

.c--preloader-a {
  background-color: map.get($color-options, b);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
}

.c--header-a {
  position: fixed;
  top: $measure * 2;
  left: 0;
  width: 100%;
  z-index: 20;

  &__wrapper {
    background-color: map.get($color-options, b);
    text-align: center;
    border-radius: 8px;
    padding: $measure * 2 $measure * 4;
  }
}

.c--page-a {
  position: relative;

  &__ft-items {
    position: relative;
    z-index: 10;
  }

  &__bg-items {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    z-index: 1;
  }
}

.c--hero-a {
  background-color: map.get($color-options, e);
  height: 60vh;
  display: flex;
  width: 100%;
  align-items: center;

  &__title {
    @extend .f--font-a;
    text-align: center;
    color: map.get($color-options, b);
  }
}

.c--accordion-a {
  &__item {
    &__hd {
      padding: $measure * 2 0;
      color: map.get($color-options, a);
      border-bottom: 1px solid #fff;
      display: block;
      width: 100%;
      text-align: left;
      position: relative;
      @extend .f--font-c;

      &__artwork {
        --translate: translateY(25px);
        --scale: scale(1.8);
        --rotate-closed: rotate(180deg);
        --rotate-open: rotate(0deg);

        position: absolute;
        right: 0;
        top: 0;
        transform: var(--translate) var(--scale) var(--rotate-closed);
        transition: transform 0.3s ease;
        pointer-events: none;
      }
    }
  }
}

.c--accordion-a__item__hd--is-active .c--accordion-a__item__hd__artwork {
  transform: var(--translate) var(--scale) var(--rotate-open);
}

.c--btn-a {
  display: inline-block;
  background-color: map.get($color-options, d);
  color: map.get($color-options, b);
  padding: $measure * 2 $measure * 4;
  border-radius: 50px;
  text-decoration: none;
  font-weight: 500;
  transition: all 0.3s ease-in-out;

  &:hover {
    border-radius: 10px;
    background-color: rgba(map.get($color-options, d), 0.8);
  }
}

.c--lottie-a {
  height: 300px;
  width: 100%;
}

// Responsive Design
@media (max-width: 768px) {
  .f--font-a {
    font-size: 32px;
  }

  .f--font-b {
    font-size: 24px;
  }

  .f--font-c {
    font-size: 18px;
  }

  .c--hero-a {
    height: 40vh;
  }

  .f--col-4 {
    width: 100% !important;
    margin-bottom: $measure * 4;
  }

  .f--col-6 {
    width: 100% !important;
  }

  .f--col-8 {
    width: 100% !important;
  }
}

@media (max-width: 480px) {
  .f--font-a {
    font-size: 28px;
  }

  .f--font-b {
    font-size: 20px;
  }

  .c--hero-a {
    height: 30vh;
  }

  .c--card-a__content,
  .c--card-b {
    padding: $measure * 3;
  }
}

// Card Components
.c--card-a {
  background-color: map.get($color-options, b);
  border-radius: 12px;
  overflow: hidden;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  transition:
    transform 0.3s ease,
    box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  &__image {
    width: 100%;
    height: 200px;
    overflow: hidden;

    img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform 0.3s ease;
    }
  }

  &:hover &__image img {
    transform: scale(1.05);
  }

  &__content {
    padding: $measure * 4;
  }

  &__title {
    @extend .f--font-c;
    color: map.get($color-options, a);
    margin-bottom: $measure * 2;
    font-weight: 600;
  }

  &__description {
    color: map.get($color-options, a);
    margin-bottom: $measure * 3;
    line-height: 1.6;
  }

  &__link {
    color: map.get($color-options, d);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;

    &:hover {
      color: map.get($color-options, e);
    }
  }
}

.c--card-b {
  background-color: map.get($color-options, b);
  border-radius: 12px;
  padding: $measure * 4;
  text-align: center;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  transition:
    transform 0.3s ease,
    box-shadow 0.3s ease;

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }

  &__icon {
    margin-bottom: $measure * 3;

    &-text {
      font-size: 48px;
      display: block;
    }
  }

  &__title {
    @extend .f--font-c;
    color: map.get($color-options, a);
    margin-bottom: $measure * 2;
    font-weight: 600;
  }

  &__description {
    color: map.get($color-options, a);
    margin-bottom: $measure * 3;
    line-height: 1.6;
  }

  &__link {
    color: map.get($color-options, d);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;

    &:hover {
      color: map.get($color-options, e);
    }
  }
}
